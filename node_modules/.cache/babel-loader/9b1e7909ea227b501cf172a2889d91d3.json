{"ast":null,"code":"var _jsxFileName = \"/Users/ltriem/Desktop/nnoski/happestar/src/components/ItemCard/index.js\";\nimport './index.sass';\nimport React from 'react';\nimport { CartContext } from '../../utils/contexts';\nimport { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FaCartArrowDown, FaTrashAlt } from 'react-icons/fa';\nimport { ToggleButtons } from \"../../boilerplate/ToggleButtonsText\";\nimport { STATUS } from '../../utils/requests';\nconst statusClasses = new Map();\nstatusClasses.set(STATUS.NONE, '');\nstatusClasses.set(STATUS.NEW, 'new');\nstatusClasses.set(STATUS.SELL, 'sell');\n\nconst ItemCard = ({\n  item,\n  width\n}) => {\n  if (width) {\n    width -= 4;\n    let items = document.getElementsByClassName('item');\n    items && [].forEach.call(items, item => item.style.width = width);\n  }\n\n  const {\n    setItem,\n    cartItems\n  } = useContext(CartContext);\n  const {\n    t\n  } = useTranslation();\n  let [activeSize, setActiveSize] = useState(0);\n  let itemInCart = cartItems.find(el => el.id === item.id);\n  let button = itemInCart ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setItem(item, --itemInCart.count),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"\\u2013\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, itemInCart.count), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setItem(item, ++itemInCart.count),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"+\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"cost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, item.cost, \"\\u0420\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setItem(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaCartArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 51\n    }\n  })));\n  let statusClass = statusClasses.get(item.status);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'item ' + statusClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.src,\n    alt: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButtons, {\n    buttons: item.sizes,\n    activeId: activeSize,\n    setActiveId: id => {\n      let count = itemInCart ? itemInCart.count : 1;\n      setItem(item, count);\n      setActiveSize(id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, button));\n};\n\nexport { ItemCard };","map":{"version":3,"sources":["/Users/ltriem/Desktop/nnoski/happestar/src/components/ItemCard/index.js"],"names":["React","CartContext","useContext","useState","useTranslation","FaCartArrowDown","FaTrashAlt","ToggleButtons","STATUS","statusClasses","Map","set","NONE","NEW","SELL","ItemCard","item","width","items","document","getElementsByClassName","forEach","call","style","setItem","cartItems","t","activeSize","setActiveSize","itemInCart","find","el","id","button","count","name","cost","statusClass","get","status","src","sizes"],"mappings":"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","sourcesContent":["import './index.sass'\nimport React from 'react';\nimport { CartContext } from '../../utils/contexts';\nimport { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FaCartArrowDown, FaTrashAlt } from 'react-icons/fa'\nimport { ToggleButtons } from \"../../boilerplate/ToggleButtonsText\";\nimport { STATUS } from '../../utils/requests';\n\nconst statusClasses = new Map();\nstatusClasses.set(STATUS.NONE, '');\nstatusClasses.set(STATUS.NEW, 'new');\nstatusClasses.set(STATUS.SELL, 'sell');\n\n\nconst ItemCard = ({ item, width }) => {\n    if(width) {\n        width -= 4;\n        let items = document.getElementsByClassName('item');\n        items && [].forEach.call(items, ((item) => item.style.width = width));\n    }\n\n    const { setItem, cartItems } = useContext(CartContext);\n    const { t } = useTranslation();\n\n    let [activeSize, setActiveSize] = useState(0);\n    let itemInCart = cartItems.find((el) => el.id === item.id);\n\n    let button = itemInCart ?\n        <button className='active'>\n            <span onClick={() => setItem(item, --itemInCart.count)}>–</span>\n            <span>{itemInCart.count}</span>\n            <span onClick={() => setItem(item, ++itemInCart.count)}>+</span>\n        </button> :\n        <>\n            <div className='info'>\n                <label className='name'>{item.name}</label>\n                <label className='cost'>{item.cost}Р</label>\n            </div>\n            <button onClick={() => setItem(item)}><FaCartArrowDown/></button>\n        </>;\n\n    let statusClass = statusClasses.get(item.status);\n\n    return (\n        <div className={'item ' + statusClass}>\n            <div className='img'>\n                <img src={item.src} alt={item.name}/>\n            </div>\n            <ToggleButtons buttons={item.sizes} activeId={activeSize} setActiveId={(id) => {\n                let count = itemInCart ? itemInCart.count : 1;\n                setItem(item, count);\n                setActiveSize(id);\n            }}/>\n            <div className='item-body'>\n                {button}\n            </div>\n        </div>\n    )\n};\n\n\nexport { ItemCard };"]},"metadata":{},"sourceType":"module"}