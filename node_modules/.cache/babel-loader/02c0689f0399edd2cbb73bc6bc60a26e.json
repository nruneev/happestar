{"ast":null,"code":"var _jsxFileName = \"/Users/ltriem/Desktop/nnoski/happestar/src/boilerplate/ImageSlider/index.js\";\nimport './index.sass';\nimport React, { useEffect, useState } from 'react';\nimport { Image } from './Image';\nimport { ToggleButtons } from '../ToggleButtons';\nimport { intervalChangeId } from '../../utils/helpers';\n\nconst ImageSlider = ({\n  className,\n  images,\n  timeout = 3000\n}) => {\n  let classForSliderName = className || '';\n  let [activeId, setActiveId] = useState(0);\n  useEffect(() => intervalChangeId(getNextImage(images), setActiveId, timeout), [images, timeout]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'carousel ' + classForSliderName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, images.map((image, key) => {\n    let imgClassName = key === activeId ? 'active' : '';\n    return /*#__PURE__*/React.createElement(Image, {\n      className: 'img-block ' + imgClassName,\n      image: image,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }\n    });\n  }), /*#__PURE__*/React.createElement(ToggleButtons, {\n    images: images,\n    activeId: activeId,\n    setActiveId: setActiveId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }));\n};\n\nfunction* getNextImage(images) {\n  let i = 0;\n\n  while (true) {\n    i = i >= images.length ? 0 : ++i;\n    yield i;\n  }\n}\n\nexport { ImageSlider };","map":{"version":3,"sources":["/Users/ltriem/Desktop/nnoski/happestar/src/boilerplate/ImageSlider/index.js"],"names":["React","useEffect","useState","Image","ToggleButtons","intervalChangeId","ImageSlider","className","images","timeout","classForSliderName","activeId","setActiveId","getNextImage","map","image","key","imgClassName","i","length"],"mappings":";AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA,OAAO,GAAG;AAA/B,CAAD,KAA2C;AAC3D,MAAIC,kBAAkB,GAAGH,SAAS,IAAI,EAAtC;AACA,MAAI,CAACI,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,CAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAMI,gBAAgB,CAACQ,YAAY,CAACL,MAAD,CAAb,EAAuBI,WAAvB,EAAoCH,OAApC,CAAvB,EAAqE,CAACD,MAAD,EAASC,OAAT,CAArE,CAAT;AAEA,sBACI;AAAK,IAAA,SAAS,EAAE,cAAcC,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACxB,QAAIC,YAAY,GAAGD,GAAG,KAAKL,QAAR,GAAmB,QAAnB,GAA8B,EAAjD;AACA,wBAAQ,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,eAAeM,YAAjC;AAA+C,MAAA,KAAK,EAAEF,KAAtD;AAA6D,MAAA,GAAG,EAAEC,GAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAAkF,GAFrF,CADL,eAII,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAER,MAAvB;AAA+B,IAAA,QAAQ,EAAEG,QAAzC;AAAmD,IAAA,WAAW,EAAEC,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CAdD;;AAiBA,UAAUC,YAAV,CAAuBL,MAAvB,EAA+B;AAC3B,MAAIU,CAAC,GAAG,CAAR;;AACA,SAAO,IAAP,EAAa;AACTA,IAAAA,CAAC,GAAGA,CAAC,IAAIV,MAAM,CAACW,MAAZ,GAAqB,CAArB,GAAyB,EAAED,CAA/B;AACA,UAAMA,CAAN;AACH;AACJ;;AAGD,SAASZ,WAAT","sourcesContent":["import './index.sass'\nimport React, { useEffect, useState } from 'react'\nimport { Image } from './Image';\nimport { ToggleButtons } from '../ToggleButtons';\nimport { intervalChangeId } from '../../utils/helpers';\n\nconst ImageSlider = ({ className, images, timeout = 3000 }) => {\n    let classForSliderName = className || '';\n    let [activeId, setActiveId] = useState(0);\n\n    useEffect(() => intervalChangeId(getNextImage(images), setActiveId, timeout), [images, timeout]);\n\n    return (\n        <div className={'carousel ' + classForSliderName}>\n            {images.map((image, key) => {\n                let imgClassName = key === activeId ? 'active' : '';\n                return (<Image className={'img-block ' + imgClassName} image={image} key={key}/>)})}\n            <ToggleButtons images={images} activeId={activeId} setActiveId={setActiveId}/>\n        </div>\n    )\n};\n\n\nfunction* getNextImage(images) {\n    let i = 0;\n    while (true) {\n        i = i >= images.length ? 0 : ++i;\n        yield i;\n    }\n}\n\n\nexport { ImageSlider }"]},"metadata":{},"sourceType":"module"}